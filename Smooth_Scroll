import 'package:flutter/material.dart';
import 'package:flutter/gestures.dart';

/// Extra scroll offset to be added while the scroll is happened
/// Default value is 10
const int defaultScrollOffset = 10;

/// Duration/length for how long the animation should go
/// after the scroll has happened
/// Default value is 600ms
const int defaultAnimationDuration = 600;

class WebSmoothScroll extends StatefulWidget {
  final ScrollController controller;

  final Widget child;

  final int scrollOffset;

  final int animationDuration;

  final Curve curve;

  const WebSmoothScroll({
    super.key,
    required this.controller,
    required this.child,
    this.scrollOffset = defaultScrollOffset,
    this.animationDuration = defaultAnimationDuration,
    this.curve = Curves.easeOutCubic,
  });

  @override
  State<WebSmoothScroll> createState() => _WebSmoothScrollState();
}
// ... (your imports and constants)

class _WebSmoothScrollState extends State<WebSmoothScroll> {
  double _scroll = 0;
  double _oldScrollState = 0;

  @override
  void initState() {
    super.initState();
    widget.controller.addListener(scrollListener);
  }

  @override
  void didUpdateWidget(covariant WebSmoothScroll oldWidget) {
    widget.controller.removeListener(scrollListener);
    widget.controller.addListener(scrollListener);
    super.didUpdateWidget(oldWidget);
  }

  @override
  Widget build(BuildContext context) {
    return Listener(
      onPointerSignal: onPointerSignal,
      onPointerMove: onPointerMove, // Add this line for touch gestures
      child: widget.child,
    );
  }

  void scrollListener() {
    _oldScrollState = _scroll;
    _scroll = widget.controller.offset;
  }

  void onPointerSignal(PointerSignalEvent event) {
    int millis = widget.animationDuration;

    if (event is PointerScrollEvent) {
      handleScrollEvent(event.scrollDelta.dy, millis);
    }
  }

  // Handle touch gestures
  void onPointerMove(PointerMoveEvent event) {
    // You can adjust the sensitivity and offset as needed
    double sensitivity = 0.5;
    double offset = event.delta.dy * sensitivity;
    int millis = widget.animationDuration;

    handleScrollEvent(offset, millis);
  }

  void handleScrollEvent(double delta, int millis) {
    if (delta > 0) {
      _scroll += (delta + widget.scrollOffset);
    } else {
      _scroll += (delta - widget.scrollOffset);
    }

    if (_scroll > widget.controller.position.maxScrollExtent) {
      _scroll = widget.controller.position.maxScrollExtent;
      millis = widget.animationDuration ~/ 4;
    }

    if (_scroll < 0) {
      _scroll = 0;
      millis = widget.animationDuration ~/ 4;
    }

    final double scrollDelta = _scroll - _oldScrollState;

    if (scrollDelta < 150 && scrollDelta > -150) {
      widget.controller.animateTo(
        _scroll,
        duration: const Duration(milliseconds: 400),
        curve: widget.curve,
      );
    } else {
      widget.controller.animateTo(
        _scroll,
        duration: Duration(milliseconds: millis),
        curve: widget.curve,
      );
    }// import 'package:flutter/material.dart';
// import 'package:flutter_v3/controllers/counter_controller.dart';
// import 'package:provider/provider.dart';

// import 'source.dart';

// class CounterPage extends StatefulWidget {
//   const CounterPage({super.key});

//   @override
//   State<CounterPage> createState() => _CounterPageState();
// }

// class _CounterPageState extends State<CounterPage> {
//   late List<TextEditingController> textControllers;
//   late ScrollController _scrollController;

//   @override
//   void initState() {
//     super.initState();
//     _scrollController = ScrollController();
//     textControllers = List.generate(20, (index) => TextEditingController());
//   }

//   @override
//   Widget build(BuildContext context) {
//     debugPrint('Homepage Launched');
//     return Scaffold(
//       appBar: AppBar(
//         title: Builder(
//           builder: (context) {
//             return Text(
//                 'Counter ${context.watch<CounterController>().count.toString()}');
//           },
//         ),
//         actions: [
//           IconButton(
//             icon: const Icon(Icons.people),
//             onPressed: () => Navigator.of(context).pushNamed('/usuarios'),
//           ),
//         ],
//       ),
//       body: _buildScrollableContent(),
//       floatingActionButton: FloatingActionButton(
//         onPressed: context.read<CounterController>().increment,
//         tooltip: 'Increment',
//         child: const Icon(Icons.add),
//       ),
//     );
//   }

//   Widget _buildScrollableContent() {
//     if (isMobile(context)) {
//       // Use regular ListView for mobile devices
//       return ListView.builder(
//         controller: _scrollController,
//         itemCount: 60,
//         itemBuilder: (context, index) {
//           return const Padding(
//             padding: EdgeInsets.all(8.0),
//             child: MyCard(),
//           );
//         },
//       );
//     } else {
//       // Use WebSmoothScroll for non-mobile devices
//       return WebSmoothScroll(
//         controller: _scrollController,
//         child: ListView(
//           physics: const NeverScrollableScrollPhysics(),
//           controller: _scrollController,
//           children: List.generate(
//             60,
//             (index) {
//               return const Padding(
//                 padding: EdgeInsets.all(8.0),
//                 child: MyCard(),
//               );
//             },
//           ),
//         ),
//       );
//     }
//   }

//   @override
//   void dispose() {
//     for (var controller in textControllers) {
//       controller.dispose();
//     }
//     super.dispose();
//   }

//   bool isMobile(BuildContext context) {
//     return MediaQuery.of(context).size.shortestSide < 600;
//   }
// }

// class MyCard extends StatelessWidget {
//   const MyCard({super.key});

//   @override
//   Widget build(BuildContext context) {
//     return Card(
//       elevation: 5.0,
//       shape: RoundedRectangleBorder(
//         borderRadius: BorderRadius.circular(15.0),
//       ),
//       child: ListTile(
//         title: const Text('Card Title'),
//         subtitle: const Text('Card Subtitle'),
//         leading: const Icon(Icons.star),
//         trailing: const Icon(Icons.arrow_forward),
//         onTap: () {
//           // Handle card tap
//         },
//       ),
//     );
//   }
// }

  }
}








